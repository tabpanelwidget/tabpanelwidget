{"version":3,"sources":["../src/tabpanelwidget.scss"],"names":[],"mappings":"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","file":"tabpanelwidget.cbf85df4.css","sourceRoot":"..","sourcesContent":["/** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    ALL SELECTORS RELY ON CLASSES/ATTRIBUTES GENERATED VIA JS, THUS WIDGETS ARE ONLY STYLED IF THERE IS SCRIPT SUPPORT\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n/** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    CLASSES you may apply onto the widget:\n\n      - \"tpw-widget\" (REQUIRED):\n\n        This class alone will either:\n\n          - style the widget as a TabPanel, as long as there is enough room for the tabs to be displayed side-by-side\n          - style the widget as an Accordion, if there is *not* enough room for the tabs to be displayed side-by-side\n\n     - Optional classes:\n\n       - For TabPanel:\n\n         \"tpw-accordion\": this will *force* the widget to display as a TabPanel (regardless of its width)\n         \"tpw-fancy\": this will style all the tabs (unlike the default styling that only styles the active heading as a tab)\n         \"tpw-pills\": this will display the tabs as \"pills\" (\"Ã  la Bootstrap\")\n         \"tpw-bar\": this will not style the \"tabs\" as tabs. Instead, it will display a border below the text/headings\n         \"tpw-centered\": this will center the tabs above the panels\n         \"tpw-rounded\": this will add a border-radius to the tabs and panel\n\n      - For Accordion:\n\n         \"tpw-accordion\": this will *force* the widget to display as an Accordion (regardless of its width)\n         \"tpw-disconnected\": this will create space between the headers and style them with rounded corners\n         \"tpw-icons-at-the-end\": this will display the icons (chevrons, +/-, etc.) on the opposite side of the headers's text\n         \"tpw-chevrons-east-south\": this will overwrite the default orientation of the chevrons (South/North) to make them point East/South (West/South in RTL scripts)\n         \"tpw-plus-minus\": this will replace the \"chevron\" icons with \"+\" and \"-\" signs\n         \"tpw-animate\": this will \"animate\" the \"chevron\" icons between their states\n\n      - For the headings:\n\n         \"tpw-selected\": this class, once applied to a heading (or a DT), will open the panel associated with that heading\n           - in case \"tpw-selected\" is not present on any heading then no panel is open in Accordions and the 1st panel is open in TabPanels\n           - TabPanels can only have one instance of \".tpw-selected\", but Accordions do not have that restriction\n\n    Note that some of these classes may be mixed (i.e. <div class=\"tpw-pills tpw-rounded tpw-centered\">)\n\n    All rules are scoped to the widget, its tabs, its headers, and its panels via classes generated via JavaScript.\n    So no JavaScript -> no styling from our end.\n\n    Classes to target the Widget's component:\n\n      - tpw-hx:       SHOULD ONLY be used to overwrite global styles affecting the headings in the Widget (to style tabs and headers, use the classes below)\n      - tpw-tab:      USE to style the tabs (in TabPanels)\n      - tpw-header:   USE to style the tabs (in Accordion)\n      - tpw-selected: USE to target \"active\" Tabs or Headers via \".tpw-selected .tpw-tab {...}\"\n                      USE to target \"active\" Panel(s) via \".tpw-selected + div > .tpw-panel {...}\"\n      - tpw-panel:    USE to style the panels (in both TabPanels and Accordions)\n      - tpw-skip:     SHOULD NOT be styled\n      - tpw-shim:     MUST NOT be styled\n      - tpw-shadow:   MUST NOT be styled\n\n    Classes to target various \"states\" of the Widget:\n\n      - tpw-js:        USE as a contextual selector to style widgets, their tabs, headers, and panels\n      - tpw-tabpanel:  USE as a contextual selector to only style the tabpanel widget, its tabs, and its panels\n      - tpw-accordion: USE as a contextual selector to only style the accordion widget, its headers, and its panels\n\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    IMPORTANT:\n\n    Avoid using \"tpw-widget\" as a selector to style the widget and its elements since without script support other\n    styles (styles related to tabs for example) would not apply\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    RESET:\n\n    We \"reset\" common styles pertaining to headings but if there are CSS rules in your document that overwrite the styling of the headings used in the widget, then you can:\n      1. overwrite those styles to preserve the integrity of the widget's headings\n      2. change your selectors so they do not target the widget's headings (the ones to which we attach the class \".tpw-hx\"), for example you would replace this rule:\n         section h3 {margin: 1rem 0;}\n         with this one:\n         section h3:not(.tpw-hx) {margin: 1rem 0;}\n         The above will style all h3s inside <section> in your document except the h3s used as tabs/headers in the Widget\n\n    Note: this will also bump the specificity of that rule\n\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    HTML CONSTRUCT (for the CURIOUS):\n\n    In \"DYNAMIC Widgets\":\n\n      1. a div is plugged as the 1st-child of the widget, it contains \"clones\" of the tabs and it is used by the ResizeObserver API\n      2. an empty div is plugged (only in tabpanels) as the 2nd-child of the widget (<div role=\"tablist\" aria-owns...>...</div>)\n      3. a span is plugged inside each heading (so keep in mind that we are styling those spans, *not* the headings)\n      4. DLs (Definition Lists) lose all their semantic as DL, DT, and DTS are replaced with DIVs, spans are inserted inside what would be DTs\n      5. content in between \"tabs/headers\" is wrapped inside 2 divs (those are *necessary* for the styling to work)\n      6. a SKIP-LINK (\".tpw-skip\") is appended to the widget (it is the last element in the widget)\n\n    In \"STATIC Widgets\":\n\n      - same as above with the exception of #1\n\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    LEXICON:\n\n    - DYNAMIC Widget: this is a Widget that is not explicitly set to be an Accordion or a TabPanel (\".tpw-widget\" without \".tpw-accordion or .tpw-tabpanel)\n    - STATIC Widget: this is a Widget that is explicitly set to be an Accordion (.tpw-widget.tpw-accordion) or a TabPanel (.tpw-widget.tpw-tabpanel)\n    - TABPANEL: this refers to the tabpanel widget\n    - ACCORDION: this refers to the accordion widget\n    - TAB(S):    this refers to the TabPanel's \"headings\", it is a heading (a DIV in the case of a Widget based on a DL) that contains a span (\".tpw-tab\") which is generated via JavaScript\n    - HEADER(S): this refers to the Accordion's \"headings\", it is a heading (a DIV in the case of Widget based on a DL) that contains a span (\".tpw-header\") which is generated via JavaScript\n    - SHIM: this refers to the first wrapper (\".tpw-shim\"), the one that wraps all the content between headings, it is generated via JavaScript\n    - PANELS: this refers to the 2nd wrapper (\".tpw-panel\") associated with the tabs/headers (same term for both tabpanel & accordion), it is generated via JavaScript\n    - SHADOW div: this refers to the first child of DYNAMIC Widgets (.tpw-shadow), it is generated via JavaScript and used by ResizeObserver\n    - SKIP-LINK: this refers to the link used as a keybaord short-cut. It shows when the user hits the [esc] key, it allows the user to exit the widget or reach its first tab/header\n\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    IMPORTANT:\n    You should not attempt to style \"tpw-shim\" nor \"tpw-shadow\" as some styling could break the widget\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    GENERIC VALUES\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n$fontSize: calc(1em * 1.1) !default;      /* font-size for tabs and headers */\n$iconSize: 1em !default;                  /* width and height of the icons */\n$fontFamily: inherit !default;            /* font-family for the tabs and headers */\n$fontWeight: 500 !default;                /* font-weight for the tabs and headers */\n$textTransform: none !default;            /* (Capitalize, Uppercase, etc.) for the tabs and headers  */\n$lineHeight: 1.3 !default;                /* for tabs and headers */\n$padding-tabs: .5rem 1rem .5rem !default; /* padding for tabs */\n$padding-headers: $padding-tabs !default; /* padding for headers */\n$padding-panel: 1rem !default;            /* padding for panels (for both tabpanel and accordion) */\n$color: currentColor !default;            /* color for active tab, non active headers, and \"down\" icon (accordion) */\n$accentColor: #0367d2 !default;           /* color for non-active tabs and pill's background-color */\n$complimentaryColor: #ffffff !default;    /* color for the pill and border-color for all pills's (via :focus) */\n$backgroundColor: #fff !default;          /* background color for tabs, headers, and panels */\n$borderColor: #ccc !default;              /* border color of tabs, headers, and panel */\n$borderRadius: .25rem !default;           /* for tabs, pills, and panel */\n$fancyYoffset: -.25rem !default;          /* vertical offset of the active tab for the \"fancy\" tabs skin */\n$fancyXoffset: .05rem !default;           /* horizontal offset to create space between the \"fancy\" tabs */\n$animationSpeed: 300ms !default;          /* for the chevron's transition */\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    VARIABLES FOR THE WIDGET (TABPANEL AND ACCORDION) AND ITS PANELS\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n$WIDGET-margins: 1rem auto !default;                            /* margins for the widget */\n$PANEL-boxShadow: inset 0 0 5px rgba(81, 203, 238, 1) !default; /* box-shadow in lieu of \"outline\" */\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    VARIABLES FOR THE TABPANEL'S PILLS\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n$PILLS-padding: .2rem .7rem !default; /* padding for all pills/tabs */\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    VARIABLES FOR THE SKIP-BOX\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n$SKIP-BOX-textDecoration: none !default;\n$SKIP-BOX-textAlign: center !default;\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    VARIABLES FOR THE CHEVRON\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n$ICON-marginRight: .5em !default; /* right offset for all icons (this translates as margin-left in a RTL context) */\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    DATA URIS (SVGs)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n/**\n    You can make those look \"rounded\" by setting the 'stroke-linecap' to 'round'\n    The color here will be overriden in browsers that support \"mask-image\" (see below)\n*/\n$iconsColor: currentColor !default;     /* Modern Browsers that support \"mask-size\" */\n$iconsColorFallBack: \"0367d2\" !default; /* DO NOT include \"#\" */\n$linecapLinejoin: \"square\" !default;    /* square | round */\n/**\n    Edit the \"stroke-width\" value in the data-uri to increase/decrease the stroke thickness\n*/\n$chevron: \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 24 24' stroke-width='3' stroke='%23#{$iconsColorFallBack}' fill='none' stroke-linecap='#{$linecapLinejoin}' stroke-linejoin='#{$linecapLinejoin}'%3E%3Cpath stroke='none' d='M0 0h24v24H0z'%3E%3C/path%3E%3Cpolyline points='6 15 12 9 18 15'%3E%3C/polyline%3E%3C/svg%3E\" !default;\n$plus:    \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 24 24' stroke-width='2' stroke='%23#{$iconsColorFallBack}' fill='none' stroke-linecap='#{$linecapLinejoin}' stroke-linejoin='#{$linecapLinejoin}'%3E%3Cpath stroke='none' d='M0 0h24v24H0z'%3E%3C/path%3E%3Ccircle cx='12' cy='12' r='9'%3E%3C/circle%3E%3Cline x1='9' y1='12' x2='15' y2='12'%3E%3C/line%3E%3Cline x1='12' y1='9' x2='12' y2='15'%3E%3C/line%3E%3C/svg%3E\" !default;\n$minus:   \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 24 24' stroke-width='2' stroke='%23#{$iconsColorFallBack}' fill='none' stroke-linecap='#{$linecapLinejoin}' stroke-linejoin='#{$linecapLinejoin}'%3E%3Cpath stroke='none' d='M0 0h24v24H0z'%3E%3C/path%3E%3Ccircle cx='12' cy='12' r='9'%3E%3C/circle%3E%3Cline x1='9' y1='12' x2='15' y2='12'%3E%3C/line%3E%3C/svg%3E\" !default;\n/**\n    Hack to be able to use \"currentColor\" to style the stroke of the SVGs used as background-images\n    It is important to \"kill\" (remove) the background-image, hence why we use shorthand here\n*/\n@supports (mask-size: 1px) {\n  .tpw-header::before {\n    background: $iconsColor !important;\n    mask-size: $iconSize;\n  }\n}\n/**\n    \"RESET\" of the headings\n    If a rule from another stylesheet overwrites the styling of the headings used in the widget, you can either:\n      - Overwrite that rule with the style you want for the headings\n      - Rewrite the selector for that rule to ignore the Widget's headings.\n    You can do so by attaching the :not() pseudo-class to your target (i.e. h2:not(.tpw-hx) { ... })\n*/\n/* bump specificity to 0.1.1.1 */\nhtml:not(#tpw-booster) .tpw-hx {\n  margin: 0 !important;\n  border: 0 !important;\n  padding: 0;\n  display: inline-block;\n  vertical-align: bottom;\n  box-sizing: border-box;\n  text-align: inherit;\n  font-size: $fontSize;\n}\n/**\n    WIDGET\n*/\n.tpw-js {\n  margin: $WIDGET-margins;\n}\n.tpw-tabpanel.tpw-centered {\n  text-align: center;\n}\n/**\n    :FOCUS\n    Styling all nested DIVs meant to receive focus (mostly for keyboard navigation)\n */\n.tpw-js .tpw-shim:focus .tpw-panel {\n  outline: none;\n  box-shadow: $PANEL-boxShadow;\n}\n.tpw-js .tpw-shim:focus {\n  box-shadow: none !important;\n}\n/*\n    We remove potential focus styling from rules like [tabindex]:focus\n    We can do this because we are styling the state of these via text-shadow\n    We change the cursor so it behaves as if we're dealing with real buttons\n*/\n.tpw-header,\n.tpw-tab {\n  font-family: $fontFamily;\n  font-weight: $fontWeight;\n  text-transform: $textTransform;\n  line-height: $lineHeight;\n  box-shadow: none;\n  outline: none;\n  cursor: default;\n}\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    THESE RULES ARE FOR THE TABPANEL\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n/**\n    TABS\n    We are styling the text in these tabs as the same color as the links ($accentColor)\n */\n .tpw-tab {\n  display: inline-block;\n  vertical-align: bottom;\n  border: 1px solid transparent;\n  color: $accentColor;\n  padding: $padding-tabs;\n  margin-bottom: -2px; /* 1px would show a subpixel \"gap\" on page zoom */\n}\n.tpw-rounded .tpw-tab {\n  border-radius: $borderRadius $borderRadius  0 0;\n}\n/* In case authors plug a SVG in there (or else) as we do in our \"Install\" section */\n.tpw-tab * {\n  vertical-align: bottom;\n}\n.tpw-fancy .tpw-tab {\n  transform: translateY(#{$fancyYoffset * -1});\n  transition: transform .3s ease;\n  border: 1px solid $borderColor;\n  border-bottom-color: transparent;\n  margin-right: $fancyXoffset;\n  position: relative;\n  background-color: rgba($backgroundColor,.8);\n}\n.tpw-fancy .tpw-tab::before {\n  content: \"\";\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: .15rem;\n  box-shadow: 0 0 1rem #000;\n}\n[dir=rtl].tpw-fancy .tpw-tab,\n[dir=rtl] .tpw-fancy .tpw-tab {\n  margin-right: 0;\n  margin-left: $fancyXoffset;\n}\n/**\n    ACTIVE TAB\n    (the one associated to the visible panel)\n*/\n.tpw-tabpanel .tpw-selected .tpw-tab {\n  color: $color;\n  background-color: $backgroundColor;\n  border-color: $borderColor $borderColor transparent;\n}\n.tpw-tabpanel.tpw-fancy .tpw-selected .tpw-tab {\n  transform: translateY(0);\n  z-index: 2;\n}\n.tpw-tabpanel.tpw-fancy .tpw-selected .tpw-tab::before {\n  box-shadow: none;\n}\nhtml:not(#tpw-booster) .tpw-bar:not(.tpw-accordion) .tpw-hx:not(:last-of-type) {\n  padding-right: 1rem;\n}\n/**\n    Very important to not lose the padding above when the widget becomes an accordion\n    (no need to style tpw-shadow for rtl script here - we just need *1* padding side)\n*/\nhtml:not(#tpw-booster) .tpw-bar .tpw-shadow .tpw-hx:not(:last-of-type) {\n  padding-right: 1rem !important;\n  padding-left: 0 !important;\n}\nhtml:not(#tpw-booster)[dir=rtl] .tpw-bar:not(.tpw-accordion) .tpw-hx:not(:last-of-type),\nhtml:not(#tpw-booster) [dir=rtl].tpw-bar:not(.tpw-accordion) .tpw-hx:not(:last-of-type) {\n  padding-right: 0; /* reset */\n  padding-left: 1rem;\n}\n.tpw-widget.tpw-bar .tpw-selected .tpw-tab {\n  background: transparent;\n}\n.tpw-widget.tpw-bar .tpw-tab {\n  border-color: transparent;\n  border-style: solid;\n  border-width: 1px 1px .2rem;\n  padding-left: 0;\n  padding-right: 0;\n  margin-bottom: 0; /* reset of the margin for when those as styled as tabs */\n}\n.tpw-widget.tpw-bar .tpw-selected .tpw-tab {\n  border-color: transparent transparent $color;\n}\n/**\n    \"outline\" has been unset so we need to style the active TAB when its gets focus\n    font-weight would create a similar (slightly better) effect but it would also change the layout\n*/\n.tpw-tabpanel .tpw-tab:focus {\n  text-shadow: 0 0 1px currentColor;\n}\n/**\n    PANEL\n*/\n.tpw-tabpanel .tpw-shim:not([hidden]) .tpw-panel {\n  padding: $padding-panel;\n  border: 1px solid $borderColor;\n  background-color: $backgroundColor;\n  outline: none;\n}\n.tpw-rounded.tpw-tabpanel .tpw-shim:not([hidden]) .tpw-panel {\n  border-radius: $borderRadius;\n}\n/*\n:nth-child(3) is the first heading\n*/\n.tpw-tabpanel.tpw-rounded.tpw-fancy .tpw-shim .tpw-panel,\n.tpw-tabpanel.tpw-rounded > :nth-child(3).tpw-selected + .tpw-shim .tpw-panel {\n  border-radius: 0 $borderRadius $borderRadius $borderRadius;\n}\n.tpw-tabpanel.tpw-bar .tpw-shim:not([hidden]) .tpw-panel {\n  background: transparent;\n  border: 0; /* reset of all borders to avoid slanted corners */\n  border-top: 1px solid $color;\n}\n/* RTL context */\n[dir=\"rtl\"].tpw-tabpanel.tpw-rounded.tpw-fancy .tpw-shim .tpw-panel,\n[dir=\"rtl\"] .tpw-tabpanel.tpw-rounded.tpw-fancy .tpw-shim .tpw-panel,\n[dir=\"rtl\"].tpw-tabpanel.tpw-rounded :nth-child(3).tpw-selected + .tpw-shim .tpw-panel,\n[dir=\"rtl\"] .tpw-tabpanel.tpw-rounded :nth-child(3).tpw-selected + .tpw-shim .tpw-panel {\n  border-radius: $borderRadius 0 $borderRadius $borderRadius;\n}\n.tpw-fancy .tpw-shim:not([hidden]) .tpw-panel {\n  position: relative;\n  z-index: 1;\n}\n/* RESET */\n.tpw-tabpanel.tpw-centered .tpw-shim .tpw-panel {\n  text-align: left;\n}\n.tpw-rounded.tpw-tabpanel.tpw-centered .tpw-shim .tpw-panel {\n  border-radius: $borderRadius;\n}\n[dir=rtl].tpw-tabpanel.tpw-centered .tpw-shim .tpw-panel,\n[dir=rtl] .tpw-tabpanel.tpw-centered .tpw-shim .tpw-panel {\n  text-align: right;\n}\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    THESE RULES ARE FOR THE ACCORDION\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n/**\n    Styling the headings following the \"unset\"\n */\n html:not(#tpw-booster) .tpw-accordion .tpw-hx {\n  display: block;\n}\n/**\n    HEADERS\n    MAKE SURE to style these HEADERs when they get focus since \"outline\" has been disabled\n    You may want to style the text in the HEADERs as the same color as your links\n */\n.tpw-accordion .tpw-header {\n  margin: 0 0 -1px;\n  padding: $padding-headers;\n  border: 1px solid $borderColor;\n  background-color: $backgroundColor;\n  color: $color;\n}\n.tpw-disconnected .tpw-header {\n  margin: 5px 0;\n  border-radius: 4px;\n}\n.tpw-disconnected .tpw-selected .tpw-header {\n  border-radius: $borderRadius $borderRadius 0 0;\n}\n.tpw-accordion .tpw-header:focus {\n  text-shadow: 0 0 1px currentColor;\n}\n.tpw-accordion [aria-expanded=true] {\n  color: $accentColor;\n}\n/**\n    PANEL\n    The second rule applies a bottom border to the last panel\n*/\n.tpw-accordion .tpw-shim:not([hidden]) .tpw-panel {\n  border-width: 0 1px;\n  border-style: solid;\n  padding: $padding-panel;\n  background-color: $backgroundColor;\n  border-color: $borderColor;\n}\n.tpw-accordion .tpw-shim:not([hidden]):last-of-type .tpw-panel {\n  border-width: 0 1px 1px;\n}\n.tpw-disconnected.tpw-accordion .tpw-panel {\n  border: 1px solid $borderColor !important;\n  border-radius: 0 0 $borderRadius $borderRadius !important;\n  margin: -6px 0 5px !important;\n  border-radius: $borderRadius;\n}\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    THE SKIP-BOX\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n.tpw-skip {\n  text-decoration: $SKIP-BOX-textDecoration;\n  text-align: $SKIP-BOX-textAlign;\n  color: $accentColor !important;\n  background-color: $backgroundColor !important;\n}\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    THESE RULES ARE FOR THE ICONS (in ACCORDION)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n/**\n    ICONS on ALL HEADERS\n*/\n.tpw-accordion .tpw-header::before {\n  content: \"\";\n  background: url($chevron) 50% 50% no-repeat;\n  mask-image: url($chevron);\n  background-size: contain;\n  display: inline-flex;\n  flex-shrink: 0;\n  position: relative;\n  margin-right: $ICON-marginRight;\n  transform: rotate(180deg);\n  width: $iconSize;\n  height: $iconSize;\n  transform-origin: 50% 50%;\n}\n.tpw-accordion.tpw-chevrons-east-south .tpw-header::before {\n  transform: rotate(90deg);\n}\n[dir=rtl].tpw-accordion.tpw-chevrons-east-south .tpw-header::before,\n[dir=rtl] .tpw-accordion.tpw-chevrons-east-south .tpw-header::before {\n  transform: rotate(-90deg);\n}\n/* specificity bump to overwrite the above */\n.tpw-js.tpw-accordion.tpw-chevrons-east-south [aria-expanded=true]::before {\n  transform: rotate(180deg);\n}\n.tpw-accordion.tpw-plus-minus .tpw-header::before {\n  background-image: url($plus);\n  mask-image: url($plus);\n}\n/**\n    ICON FOR ACTIVATED HEADERS (the one(s) above open panel(s))\n */\n.tpw-accordion [aria-expanded=true]::before {\n  transform: rotate(0deg);\n}\n.tpw-accordion [aria-expanded=true]::before {\n  transform: rotate(0deg);\n}\n.tpw-accordion.tpw-plus-minus [aria-expanded=true]::before {\n  background-image: url($minus);\n  mask-image: url($minus);\n}\n\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    MODIFIERS\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n/*\n    CHEVRON SHOWING AT THE END (right if RTL and left if LTR)\n    Using the class: \"tpw-icons-at-the-end\" (on the widget wrapper)\n*/\n.tpw-accordion.tpw-icons-at-the-end .tpw-header {\n  flex-direction: row-reverse;\n  justify-content: space-between;\n}\n.tpw-js.tpw-accordion.tpw-icons-at-the-end .tpw-header::before {\n  margin-right: 0;\n  margin-left: 0;\n}\n/* to animate the chevrons */\n.tpw-animate:not(.tpw-plus-minus) .tpw-header::before {\n  transition: all $animationSpeed cubic-bezier(0.655, -0.315, 0.515, 1.365);\n}\n/*\n    For Right to Left (RTL) scripts we need to swap the margin of the icon\n*/\n[dir=rtl].tpw-accordion .tpw-header::before,\n[dir=rtl] .tpw-accordion .tpw-header::before {\n  margin-right: 0;\n  margin-left: $ICON-marginRight;\n}\n/*\n    STYLING THE TABPANEL \"A LA TWITTER\"\n    Using the class: \"tpw-pills\" (on the widget wrapper)\n*/\n.tpw-tabpanel.tpw-pills .tpw-selected .tpw-tab {\n    color: $complimentaryColor;\n    background-color: $accentColor;\n    border-color: transparent;\n}\n.tpw-tabpanel.tpw-pills .tpw-tab {\n  padding: $PILLS-padding;\n  margin-bottom: .3rem;\n  text-shadow: none;\n  border: .15rem double transparent;\n}\n.tpw-rounded.tpw-tabpanel.tpw-pills .tpw-tab {\n  border-radius: $borderRadius;\n}\n.tpw-tabpanel.tpw-pills .tpw-tab:focus {\n  box-shadow: 0 0 0 1px $accentColor;\n}\n.tpw-tabpanel.tpw-pills .tpw-shim:not([hidden]) .tpw-panel {\n  border: none;\n}\n.tpw-rounded.tpw-tabpanel.tpw-centered .tpw-shim:not([hidden]) .tpw-panel,\n.tpw-rounded.tpw-tabpanel.tpw-pills .tpw-shim:not([hidden]) .tpw-panel {\n  border-radius: $borderRadius !important;\n}\n/*\nno border-radius for .tpw-bar\n*/\n.tpw-rounded.tpw-tabpanel.tpw-bar .tpw-shim:not([hidden]) .tpw-panel {\n  border-radius: 0 !important;\n}\n\n/**\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    YOU SHOULD NOT MESS WITH ANYTHING BELOW THIS LINE (EXCEPT MAY BE FOR THE STYLING OF THE CHEVRON)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\n/**\n    This is to position the \"SKIP-LINK\" box in relation to the widget and also to position\n    the icons in relation to the headers if we wanted to rely on \"position:absolute\" for that\n*/\n/**\n    WIDGET\n*/\n.tpw-js {\n  display: flow-root;\n}\n.tpw-js,\n.tpw-js .tpw-header {\n  position: relative;\n  z-index: 0; /* to prevent z-indexes (>0) on tabs and panel from messing with the page */\n}\n/* This is to remove the element from thhe flow */\n.tpw-tabpanel > [role=tablist] {\n  position: absolute;\n}\n/**\n    This is how we reveal the panels of the tabpanels and accordions\n*/\n.tpw-shim:not([hidden]) {\n  display: inline;\n}\n.tpw-shim:not([hidden]) .tpw-panel {\n  float: left;\n  width: 100%;\n  box-sizing: border-box;\n}\n/**\n    spans need to extend across the heading\n    Flex helps with vertical alignment\n    inline-block is for IE10 which fails even with display:flexbox\n*/\n.tpw-accordion .tpw-header {\n  width: 100%;\n  box-sizing: border-box;\n  display: inline-block;\n  display: flex;\n  align-items: center;\n}\n/**\n    \"SKIP BOX\"\n    This is a skip-link that allows the user to either skip the entire widget or reach the first tab/header\n    It is revealed when the user hits the escape key (it provides a \"shortcut\")\n    It is plugged inside the widget via JavaScript (it is the last element in the widget)\n */\nhtml:not(#tpw-booster) .tpw-skip {\n  all: unset;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  z-index: 3;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 0;\n  width: 0;\n  padding: 0;\n  overflow: hidden;\n  box-shadow: none !important;\n}\n/* This should be self explanatory */\nhtml:not(#tpw-booster) .tpw-skip:focus {\n  display: flex;\n  padding: .5rem 1rem;\n  height: auto;\n  width: auto;\n  cursor: pointer;\n  text-align: center;\n  opacity: .95;\n}\n.tpw-skip > b {\n  width: 100%;\n  font-style: inherit;\n  font-size: inherit;\n  color: inherit;\n}\n/**\n    DO NOT STYLE THIS\n    IT IS USED BY THE SCRIPT TO DECIDE BETWEEN ACCORDION and TABPANEL\n    1. overkill but ppl could be styling aria-hidden with display:none !important (who knows?)\n*/\n.tpw-shadow {\n  display: block !important; /* 1 */\n  position:absolute;\n  top:0;\n  right:0;\n  left:0;\n  z-index:-1;\n  visibility:hidden;\n}\nhtml:not(#tpw-booster) .tpw-shadow .tpw-hx {\n  display: inline-block !important;\n}\n"]}